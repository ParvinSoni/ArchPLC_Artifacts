#                                             
# *Copyright 2007, 2011 CCLS Columbia University (USA), LIFO University of Orl��ans (France), BRGM (France)
# *
# *Authors: Cyril Nortet, Xiangrong Kong, Ansaf Salleb-Aouissi, Christel Vrain, Daniel Cassard
# *
# *This file is part of QuantMiner.
# *
# *QuantMiner is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
# *
# *QuantMiner is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# *
# *You should have received a copy of the GNU General Public License along with QuantMiner.  If not, see <http://www.gnu.org/licenses/>.
# 

from src.simulatedAnnealing import *
from src.solver import *
from src.tools import *



class PanelSimulatedParam(PanelBaseParam):


    #* Creates new form PanneauParamGenetique 
    def __init__(self, contexteResolution):
        self.__jButtonDefautIterations = None
        self.__jButtonDefautReglesParall = None
        self.__jLabelNombreIterations = None
        self.__jLabelReglesParallelles = None
        self.__jTextNombreIterations = None
        self.__jTextReglesParallelles = None

        super().__init__(contexteResolution)

        iconeRetourDefaut = None

        self.__initComponents()

        # Ic�nes sur les boutons :
        iconeRetourDefaut = ImageIcon(ENV.REPERTOIRE_RESSOURCES + "retour_defaut.jpg")
        self.__jButtonDefautIterations.setIcon(iconeRetourDefaut)
        self.__jButtonDefautReglesParall.setIcon(iconeRetourDefaut)

        if self.m_contexteResolution is None:
            return

        parametresRecuitSimule = self.m_contexteResolution.m_parametresTechRecuitSimule

        # Initialisation du contenu des champs :
        self.__jTextNombreIterations.setText(String.valueOf(parametresRecuitSimule.m_iNombreIterations))
        self.__jTextReglesParallelles.setText(String.valueOf(parametresRecuitSimule.m_iNombreSolutionsParalleles))

    #    * This method is called from within the constructor to
    #     * initialize the form.
    #     * WARNING: Do NOT modify this code. The content of this method is
    #     * always regenerated by the Form Editor.
    #     
    def __initComponents(self):
        self.__jTextNombreIterations = javax.swing.JTextField()
        self.__jLabelNombreIterations = javax.swing.JLabel()
        self.__jLabelReglesParallelles = javax.swing.JLabel()
        self.__jTextReglesParallelles = javax.swing.JTextField()
        self.__jButtonDefautIterations = javax.swing.JButton()
        self.__jButtonDefautReglesParall = javax.swing.JButton()

        setLayout(None)

        setPreferredSize(java.awt.Dimension(410, 150))
        self.__jTextNombreIterations.setText("jTextField1")
        add(self.__jTextNombreIterations)
        self.__jTextNombreIterations.setBounds(330, 20, 60, 20)

        self.__jLabelNombreIterations.setText("Nombre de tentatives d'am\u00e9lioration de la r\u00e8gle :")
        add(self.__jLabelNombreIterations)
        self.__jLabelNombreIterations.setBounds(20, 20, 290, 16)

        self.__jLabelReglesParallelles.setText("Nombre de r\u00e8gles potentielles \u00e0 tester en parall\u00e8le :")
        add(self.__jLabelReglesParallelles)
        self.__jLabelReglesParallelles.setBounds(20, 50, 300, 16)

        self.__jTextReglesParallelles.setText("jTextField1")
        add(self.__jTextReglesParallelles)
        self.__jTextReglesParallelles.setBounds(330, 50, 60, 20)

        self.__jButtonDefautIterations.setBackground(java.awt.Color(255, 255, 255))
        self.__jButtonDefautIterations.addActionListener(ActionListenerAnonymousInnerClass(self))

        add(self.__jButtonDefautIterations)
        self.__jButtonDefautIterations.setBounds(400, 20, 20, 20)

        self.__jButtonDefautReglesParall.setBackground(java.awt.Color(255, 255, 255))
        self.__jButtonDefautReglesParall.addActionListener(ActionListenerAnonymousInnerClass2(self))

        add(self.__jButtonDefautReglesParall)
        self.__jButtonDefautReglesParall.setBounds(400, 50, 20, 20)
 #GEN-END:initComponents

    class ActionListenerAnonymousInnerClass(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonDefautIterationsActionPerformed(evt)

    class ActionListenerAnonymousInnerClass2(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonDefautReglesParallActionPerformed(evt)

    def __jButtonDefautReglesParallActionPerformed(self, evt):
        self.__jTextReglesParallelles.setText(String.valueOf(SimulatedAnnealingParameters.DEFAUT_NBPARALL)) #GEN-LAST:event_jButtonDefautReglesParallActionPerformed

    def __jButtonDefautIterationsActionPerformed(self, evt):
        self.__jTextNombreIterations.setText(String.valueOf(SimulatedAnnealingParameters.DEFAUT_NBITER)) #GEN-LAST:event_jButtonDefautIterationsActionPerformed


    # Variables declaration - do not modify//GEN-BEGIN:variables
    # End of variables declaration//GEN-END:variables



    def EnregistrerParametres(self):

        iNombreIterations = 0
        iNombreSolutionsParalleles = 0

        parametresTechnique = self.m_contexteResolution.m_parametresTechRecuitSimule
        if parametresTechnique is None:
            return True

        # M�morisation des param�tres :


        try:
            iNombreIterations = int(self.__jTextNombreIterations.getText())
            parametresTechnique.m_iNombreIterations = iNombreIterations
        except NumberFormatException as e:
            return False

        try:
            iNombreSolutionsParalleles = int(self.__jTextReglesParallelles.getText())
            parametresTechnique.m_iNombreSolutionsParalleles = iNombreSolutionsParalleles
        except NumberFormatException as e:
            return False

        return True



