#                                             
# *Copyright 2007, 2011 CCLS Columbia University (USA), LIFO University of Orl��ans (France), BRGM (France)
# *
# *Authors: Cyril Nortet, Xiangrong Kong, Ansaf Salleb-Aouissi, Christel Vrain, Daniel Cassard
# *
# *This file is part of QuantMiner.
# *
# *QuantMiner is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
# *
# *QuantMiner is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# *
# *You should have received a copy of the GNU General Public License along with QuantMiner.  If not, see <http://www.gnu.org/licenses/>.
# 


from src.tools import *



class DialogHelp(javax.swing.JDialog, HyperlinkListener):



    #* Creates new form DialogFenetreAide 
    def __init__(self, sFichierAide, parent, modal):
        self.__m_sPageCourante = None
        self.__jButtonFermer = None
        self.__jButtonHome = None
        self.__jEditorPaneHTML = None
        self.__jPanel1 = None
        self.__jScrollPaneHTML = None

        super().__init__(parent, modal)
        self.__initComponents()

        setResizable(False)
        setLocationRelativeTo(None)

        self.__jEditorPaneHTML.addHyperlinkListener(self)

        self.__m_sPageCourante = "file:///" + sFichierAide
        self.__ChargerPageActive()



    def __ChargerPageActive(self):
        if self.__m_sPageCourante is None:
            return

        try:
            self.__jEditorPaneHTML.setPage(java.net.URL(self.__m_sPageCourante))
        except Exception as e:
            print(e)



    def hyperlinkUpdate(self, event):
        documentHTML = None

        if event.getEventType() == HyperlinkEvent.EventType.ACTIVATED:
            self.__m_sPageCourante = str(event.getURL())

            if isinstance(event, HTMLFrameHyperlinkEvent):
                documentHTML = self.__jEditorPaneHTML.getDocument()
                documentHTML.processHTMLFrameHyperlinkEvent(event)
            else:
                self.__ChargerPageActive()




    #    * This method is called from within the constructor to
    #     * initialize the form.
    #     * WARNING: Do NOT modify this code. The content of this method is
    #     * always regenerated by the Form Editor.
    #     
    # <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    def __initComponents(self):
        self.__jPanel1 = javax.swing.JPanel()
        self.__jScrollPaneHTML = javax.swing.JScrollPane()
        self.__jEditorPaneHTML = javax.swing.JEditorPane()
        self.__jButtonFermer = javax.swing.JButton()
        self.__jButtonHome = javax.swing.JButton()

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE)
        setTitle("QuantMiner Help Contents")
        setResizable(False)
        addWindowListener(WindowAdapterAnonymousInnerClass(self))


        self.__jPanel1.setLayout(None)
        self.__jPanel1.setPreferredSize(java.awt.Dimension(1300, 600))
        self.__jScrollPaneHTML.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)
        self.__jEditorPaneHTML.setEditable(False)
        self.__jEditorPaneHTML.setContentType("text/html")
        self.__jScrollPaneHTML.setViewportView(self.__jEditorPaneHTML)

        self.__jPanel1.add(self.__jScrollPaneHTML)
        self.__jScrollPaneHTML.setBounds(10, 30, 1280, 520)

        self.__jButtonFermer.setText("Close")
        self.__jButtonFermer.addActionListener(ActionListenerAnonymousInnerClass(self))

        self.__jPanel1.add(self.__jButtonFermer)
        self.__jButtonFermer.setBounds(600, 560, 70, 30)

        self.__jButtonHome.setText("Back to the main page")
        self.__jButtonHome.addActionListener(ActionListenerAnonymousInnerClass2(self))

        self.__jPanel1.add(self.__jButtonHome)
        self.__jButtonHome.setBounds(11, 6, 200, 20)

        getContentPane().add(self.__jPanel1, java.awt.BorderLayout.CENTER)

        pack() # </editor-fold>//GEN-END:initComponents

    class WindowAdapterAnonymousInnerClass(java.awt.event.WindowAdapter):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def windowClosing(self, evt):
            outerInstance.__closeDialog(evt)

    class ActionListenerAnonymousInnerClass(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonFermerActionPerformed(evt)

    class ActionListenerAnonymousInnerClass2(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonHomeActionPerformed(evt)

    def __jButtonHomeActionPerformed(self, evt):
        self.__m_sPageCourante = "file:///" + ENV.REPERTOIRE_AIDE + "index.htm"
        self.__ChargerPageActive() #GEN-LAST:event_jButtonHomeActionPerformed



    def __jButtonFermerActionPerformed(self, evt):
        setVisible(False)
        dispose() #GEN-LAST:event_jButtonFermerActionPerformed



    #* Closes the dialog 
    def __closeDialog(self, evt):
        setVisible(False)
        dispose() #GEN-LAST:event_closeDialog

    #    *
    #     * @param args the command line arguments
    #     
    @staticmethod
    def main(args):
        (DialogHelp(None, javax.swing.JFrame(), True)).show()


    # Variables declaration - do not modify//GEN-BEGIN:variables
    # End of variables declaration//GEN-END:variables

