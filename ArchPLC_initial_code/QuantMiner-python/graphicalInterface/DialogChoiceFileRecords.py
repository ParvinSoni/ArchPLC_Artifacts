#                                             
# *Copyright 2007, 2011 CCLS Columbia University (USA), LIFO University of Orl��ans (France), BRGM (France)
# *
# *Authors: Cyril Nortet, Xiangrong Kong, Ansaf Salleb-Aouissi, Christel Vrain, Daniel Cassard
# *
# *This file is part of QuantMiner.
# *
# *QuantMiner is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
# *
# *QuantMiner is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# *
# *You should have received a copy of the GNU General Public License along with QuantMiner.  If not, see <http://www.gnu.org/licenses/>.
# 

from src.solver import *
from src.tools import *




class DialogChoiceFileRecords(javax.swing.JDialog):

    TYPE_ENREGISTREMENT_ANNULER = -1 #cancel
    TYPE_ENREGISTREMENT_BINAIRE = 0 #save in quant miner file
    TYPE_ENREGISTREMENT_HTML_TEXTE = 1 #save in html text
    TYPE_ENREGISTREMENT_HTML_GRAPHIQUE = 2 #save in html graphic
    TYPE_ENREGISTREMENT_CSV = 3 #save in csv file




    class DialogChoixEnregistrementFichier_Donnees(object):


        def __init__(self, outerInstance):
            self.m_iTypeEnregistrement = 0
            self.m_sNomUtilisateur = None
            self.m_sDescriptionRegles = None

            self.__outerInstance = outerInstance

            self.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_ANNULER
            self.m_sNomUtilisateur = ""
            self.m_sDescriptionRegles = ""




    #* Creates new form DialogChoixEnregistrementFichier 
    def __init__(self, contexteResolution, parent, modal):
        self.__m_contexteResolution = None
        self.m_donnees = None
        self.__jButtonAide = None
        self.__jButtonAnnuler = None
        self.__jButtonFormatQuantMiner = None
        self.__jButtonHTMLGraphique = None
        self.__jButtonHTMLTexte = None
        self.__jButtonCsv = None
        self.__jLabelAuteur = None
        self.__jLabelDescriptif = None
        self.__jPanelEnregistrement = None
        self.__jPanelGeneral = None
        self.__jPanelInfos = None
        self.__jScrollPaneDescription = None
        self.__jTextAreaDescription = None
        self.__jTextFieldAuteur = None

        super().__init__(parent, modal)
        self.__initComponents()

        self.__m_contexteResolution = contexteResolution

        self.m_donnees = DialogChoixEnregistrementFichier_Donnees(self)
        self.m_donnees.m_sNomUtilisateur = self.__m_contexteResolution.m_sNomUtilisateur
        self.m_donnees.m_sDescriptionRegles = self.__m_contexteResolution.m_sDescriptionRegles

        getContentPane().setSize(431, 203)

        validate()

        self.__jTextFieldAuteur.setText(self.m_donnees.m_sNomUtilisateur)
        self.__jTextAreaDescription.setText(self.m_donnees.m_sDescriptionRegles)

        setLocationRelativeTo(None)



    def LierStructureDonnees(self):
        return self.m_donnees


    #    * This method is called from within the constructor to
    #     * initialize the form.
    #     * WARNING: Do NOT modify this code. The content of this method is
    #     * always regenerated by the Form Editor.
    #     
    # <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    def __initComponents(self):
        self.__jPanelGeneral = javax.swing.JPanel()
        self.__jButtonAnnuler = javax.swing.JButton() #cancel

        self.__jPanelInfos = javax.swing.JPanel() #info panel
        self.__jScrollPaneDescription = javax.swing.JScrollPane()
        self.__jTextAreaDescription = javax.swing.JTextArea() #rules description
        self.__jTextFieldAuteur = javax.swing.JTextField() #Author
        self.__jLabelAuteur = javax.swing.JLabel() #"Report author"
        self.__jLabelDescriptif = javax.swing.JLabel() #"rules description"

        self.__jPanelEnregistrement = javax.swing.JPanel()
        self.__jButtonHTMLTexte = javax.swing.JButton() #save as html text --button
        self.__jButtonHTMLGraphique = javax.swing.JButton() #save as html graphic--button
        self.__jButtonFormatQuantMiner = javax.swing.JButton() #save as qmr --button
        self.__jButtonCsv = javax.swing.JButton() #save as csv --button
        self.__jButtonAide = javax.swing.JButton() #help button


        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE)
        setTitle("Save a list of rules")
        setResizable(False)
        addWindowListener(WindowAdapterAnonymousInnerClass(self))

        self.__jPanelGeneral.setLayout(None)

        #the basic dialog size
        self.__jPanelGeneral.setPreferredSize(java.awt.Dimension(500, 570))
        self.__jButtonAnnuler.setText("Cancel")
        self.__jButtonAnnuler.addActionListener(ActionListenerAnonymousInnerClass(self))

        #add cancel button
        self.__jPanelGeneral.add(self.__jButtonAnnuler)
        self.__jButtonAnnuler.setBounds(190, 520, 130, 23)

        self.__jPanelInfos.setLayout(None)

        self.__jPanelInfos.setBorder(javax.swing.BorderFactory.createTitledBorder(None, "Information about the context of extraction of rules:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, java.awt.Font("Dialog", 3, 12)))
        self.__jScrollPaneDescription.setViewportView(self.__jTextAreaDescription)

        self.__jPanelInfos.add(self.__jScrollPaneDescription)
        self.__jScrollPaneDescription.setBounds(10, 100, 460, 140)

        self.__jPanelInfos.add(self.__jTextFieldAuteur)
        self.__jTextFieldAuteur.setBounds(130, 40, 340, 19)

        self.__jLabelAuteur.setText("Report author:")
        self.__jPanelInfos.add(self.__jLabelAuteur)
        self.__jLabelAuteur.setBounds(10, 40, 120, 14)

        self.__jLabelDescriptif.setText("Rules Description:")
        self.__jPanelInfos.add(self.__jLabelDescriptif)
        self.__jLabelDescriptif.setBounds(10, 80, 250, 14)

        self.__jPanelGeneral.add(self.__jPanelInfos)
        self.__jPanelInfos.setBounds(10, 40, 480, 250)
        self.__jPanelInfos.getAccessibleContext().setAccessibleName("Information on the report:")

        self.__jPanelEnregistrement.setLayout(None)

        self.__jPanelEnregistrement.setBorder(javax.swing.BorderFactory.createTitledBorder(None, "Choice of the format for saving the rules:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, java.awt.Font("Dialog", 3, 12)))

        #html button
        self.__jButtonHTMLTexte.setText("HTML (text)")
        self.__jButtonHTMLTexte.addActionListener(ActionListenerAnonymousInnerClass2(self))

        self.__jPanelEnregistrement.add(self.__jButtonHTMLTexte)
        self.__jButtonHTMLTexte.setBounds(50, 40, 390, 23)

        #html graphic button
        self.__jButtonHTMLGraphique.setText("HTML (graphic)")
        self.__jButtonHTMLGraphique.addActionListener(ActionListenerAnonymousInnerClass3(self))

        self.__jPanelEnregistrement.add(self.__jButtonHTMLGraphique)
        self.__jButtonHTMLGraphique.setBounds(50, 70, 390, 23)

        #qmr button
        self.__jButtonFormatQuantMiner.setText("QuantMiner File (to manipulate later in QuantMiner )")
        self.__jButtonFormatQuantMiner.addActionListener(ActionListenerAnonymousInnerClass4(self))

        self.__jPanelEnregistrement.add(self.__jButtonFormatQuantMiner)
        self.__jButtonFormatQuantMiner.setBounds(50, 100, 390, 23)

        #csv button
        self.__jButtonCsv.setText("CSV File")
        self.__jButtonCsv.addActionListener(ActionListenerAnonymousInnerClass5(self))

        self.__jPanelEnregistrement.add(self.__jButtonCsv)
        self.__jButtonCsv.setBounds(50, 130, 390, 23)

        #add jPanelEnregistrement panel 
        self.__jPanelGeneral.add(self.__jPanelEnregistrement)
        self.__jPanelEnregistrement.setBounds(10, 310, 480, 180)
        self.__jPanelEnregistrement.getAccessibleContext().setAccessibleName("Saving format:")

        self.__jButtonAide.setText("?")
        self.__jButtonAide.addActionListener(ActionListenerAnonymousInnerClass6(self))

        self.__jPanelGeneral.add(self.__jButtonAide)
        self.__jButtonAide.setBounds(438, 12, 50, 23)

        getContentPane().add(self.__jPanelGeneral, java.awt.BorderLayout.CENTER)

        pack() # </editor-fold>//GEN-END:initComponents

    class WindowAdapterAnonymousInnerClass(java.awt.event.WindowAdapter):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def windowClosing(self, evt):
            outerInstance.__closeDialog(evt)

    class ActionListenerAnonymousInnerClass(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonAnnulerActionPerformed(evt)

    class ActionListenerAnonymousInnerClass2(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonHTMLTexteActionPerformed(evt)

    class ActionListenerAnonymousInnerClass3(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonHTMLGraphiqueActionPerformed(evt)

    class ActionListenerAnonymousInnerClass4(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonFormatQuantMinerActionPerformed(evt)

    class ActionListenerAnonymousInnerClass5(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonCsvActionPerformed(evt)

    class ActionListenerAnonymousInnerClass6(java.awt.event.ActionListener):

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonAideActionPerformed(evt)




    def __jButtonCsvActionPerformed(self, evt):
        # TODO Auto-generated method stub
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_CSV
        self.m_donnees.m_sNomUtilisateur = self.__jTextFieldAuteur.getText()
        self.m_donnees.m_sDescriptionRegles = self.__jTextAreaDescription.getText()

        setVisible(False)
        dispose()



    def __jButtonAideActionPerformed(self, evt):
        dialogAide = DialogHelp(ENV.REPERTOIRE_AIDE+"format_regles.htm", None, True)
        dialogAide.show() #GEN-LAST:event_jButtonAideActionPerformed




    def __jButtonHTMLGraphiqueActionPerformed(self, evt):
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_HTML_GRAPHIQUE
        self.m_donnees.m_sNomUtilisateur = self.__jTextFieldAuteur.getText()
        self.m_donnees.m_sDescriptionRegles = self.__jTextAreaDescription.getText()

        setVisible(False)
        dispose() #GEN-LAST:event_jButtonHTMLGraphiqueActionPerformed

    def __jButtonAnnulerActionPerformed(self, evt):
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_ANNULER

        setVisible(False)
        dispose() #GEN-LAST:event_jButtonAnnulerActionPerformed

    def __jButtonFormatQuantMinerActionPerformed(self, evt):
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_BINAIRE
        self.m_donnees.m_sNomUtilisateur = self.__jTextFieldAuteur.getText()
        self.m_donnees.m_sDescriptionRegles = self.__jTextAreaDescription.getText()

        setVisible(False)
        dispose() #GEN-LAST:event_jButtonFormatQuantMinerActionPerformed

    def __jButtonHTMLTexteActionPerformed(self, evt):
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_HTML_TEXTE
        self.m_donnees.m_sNomUtilisateur = self.__jTextFieldAuteur.getText()
        self.m_donnees.m_sDescriptionRegles = self.__jTextAreaDescription.getText()

        setVisible(False)
        dispose() #GEN-LAST:event_jButtonHTMLTexteActionPerformed

    #* Closes the dialog 
    def __closeDialog(self, evt):
        self.m_donnees.m_iTypeEnregistrement = TYPE_ENREGISTREMENT_ANNULER

        setVisible(False)
        dispose() #GEN-LAST:event_closeDialog

    #    *
    #     * @param args the command line arguments
    #     
    @staticmethod
    def main(args):
        (DialogChoiceFileRecords(None, javax.swing.JFrame(), True)).show()


    # Variables declaration - do not modify//GEN-BEGIN:variables

    # End of variables declaration//GEN-END:variables

