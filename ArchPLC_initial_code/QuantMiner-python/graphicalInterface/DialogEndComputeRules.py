#                                             
# *Copyright 2007, 2011 CCLS Columbia University (USA), LIFO University of Orl��ans (France), BRGM (France)
# *
# *Authors: Cyril Nortet, Xiangrong Kong, Ansaf Salleb-Aouissi, Christel Vrain, Daniel Cassard
# *
# *This file is part of QuantMiner.
# *
# *QuantMiner is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
# *
# *QuantMiner is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# *
# *You should have received a copy of the GNU General Public License along with QuantMiner.  If not, see <http://www.gnu.org/licenses/>.
# 


# from apriori_solver import *
from tools import *
from tools.ENV import *



class DialogEndComputeRules:


    #* Creates new form DialogFinCalculRegles 
    def __init__(self, parent, modal):
        self.__m_timerSonnerie = None
        self.__jButtonFermer = None
        self.__jLabelCalculEffectue = None
        self.__jPanelPrincipal = None

        # super().__init__(parent, modal)

        self.__initComponents()

        # Cr�ation d'un timer pour r�it�rer r�guli�rement l'effet sonore :
        tacheProgrammee = DialogEndComputeRules.ActionListenerAnonymousInnerClass(self)
        # ToolsInterface.JouerSon(ENV.CHEMIN_FICHIER_SON_FIN_CALCUL)
        # self.__m_timerSonnerie = Timer(2500, tacheProgrammee) #play sound for 2500 micro-seconds
        # self.__m_timerSonnerie.start()
        # self.__m_timerSonnerie.stop()
        # self.__jButtonFermer.requestFocus()


        # setLocationRelativeTo(None)

    class ActionListenerAnonymousInnerClass:

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            ToolsInterface.JouerSon(ENV.CHEMIN_FICHIER_SON_FIN_CALCUL)




    #    * This method is called from within the constructor to
    #     * initialize the form.
    #     * WARNING: Do NOT modify this code. The content of this method is
    #     * always regenerated by the Form Editor.
    #     
    # <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    def __initComponents(self):
        self.__jPanelPrincipal = None # javax.swing.JPanel()
        self.__jLabelCalculEffectue = None # javax.swing.JLabel()
        self.__jButtonFermer = None # javax.swing.JButton()

        '''
        setDefaultCloseOperation(None # javax.swing.WindowConstants.DISPOSE_ON_CLOSE)
        setTitle("")
        setModal(True)
        setResizable(False)
        addWindowListener(WindowAdapterAnonymousInnerClass(self))

        self.__jPanelPrincipal.setLayout(None)

        self.__jPanelPrincipal.setPreferredSize(java.awt.Dimension(270, 110))
        self.__jLabelCalculEffectue.setFont(java.awt.Font("Dialog", 3, 15))
        self.__jLabelCalculEffectue.setText("Computation of Rules done!")
        self.__jPanelPrincipal.add(self.__jLabelCalculEffectue)
        self.__jLabelCalculEffectue.setBounds(30, 20, 320, 30)

        self.__jButtonFermer.setText("Close")
        self.__jButtonFermer.addActionListener(ActionListenerAnonymousInnerClass(self))

        self.__jPanelPrincipal.add(self.__jButtonFermer)
        self.__jButtonFermer.setBounds(90, 70, 100, 25)

        getContentPane().add(self.__jPanelPrincipal, java.awt.BorderLayout.CENTER)

        pack() # </editor-fold>//GEN-END:initComponents
        '''

    class WindowAdapterAnonymousInnerClass:

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def windowClosing(self, evt):
            outerInstance.__closeDialog(evt)

    class ActionListenerAnonymousInnerClass:

        def __init__(self, outerInstance):
            self.__outerInstance = outerInstance

        def actionPerformed(self, evt):
            outerInstance.__jButtonFermerActionPerformed(evt)

    def __jButtonFermerActionPerformed(self, evt):
        self.__FermerDialog() #GEN-LAST:event_jButtonFermerActionPerformed

    #* Closes the dialog 
    def __closeDialog(self, evt):
        self.__FermerDialog() #GEN-LAST:event_closeDialog


    def __FermerDialog(self):
        self.__m_timerSonnerie.stop()
        self.__m_timerSonnerie = None
        setVisible(False)
        dispose()


    #    *
    #     * @param args the command line arguments
    #     
    @staticmethod
    def main(args):
        DialogEndComputeRules(None) # javax.swing.JFrame(), True)).show()



    # Variables declaration - do not modify//GEN-BEGIN:variables
    # End of variables declaration//GEN-END:variables

